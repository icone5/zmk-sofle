#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        LAYER1 {
            bindings = <
&mt GRAVE ESCAPE  &kp N1     &kp N2        &kp N3        &kp N4              &kp N5       &kp UP_ARROW     &kp N6     &kp N7  &kp N8         &kp N9         &kp N0             &kp BACKSPACE
&kp TAB           &kp Q      &kp W         &kp E         &kp R               &kp T        &kp DOWN_ARROW   &kp Y      &kp U   &kp I          &kp O          &kp P              &kp DEL
&kp CAPS          &kp A      &kp S         &kp D         &kp F               &kp G        &kp LEFT_ARROW   &kp H      &kp J   &kp K          &kp L          &kp SEMI           &kp APOS
&kp LSHFT         &kp Z      &kp X         &kp C         &kp V               &kp B        &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA      &kp DOT        &kp FSLH           &kp ENTER
&kp C_MUTE        &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &kp K_CONTEXT_MENU  &kp SPACE    &kp ENTER        &kp SPACE  &tog 1  &kp RIGHT_ALT  &kp RIGHT_WIN  &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER1";
        };

        LAYER2 {
            bindings = <
&kp F1           &kp F2           &kp F3           &kp F4  &kp F5  &kp F6    &rgb_ug RGB_BRI  &kp F7     &kp F8    &kp F9      &kp F10    &kp F11           &kp F12
&trans           &trans           &trans           &trans  &trans  &trans    &rgb_ug RGB_BRD  &kp PG_UP  &kp END   &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &trans           &trans  &trans  &trans    &rgb_ug RGB_HUD  &kp PG_DN  &kp LEFT  &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_EFF  &trans  &trans  &trans    &rgb_ug RGB_HUI  &trans     &trans    &kp INSERT  &trans     &trans            &trans
&rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &trans           &trans  &trans  &trans    &rgb_ug RGB_TOG  &trans     &to 0     &trans      &trans     &trans
            >;

            display-name = "LAYER2";
            sensor-bindings = <&inc_dec_kp C_BRI_INC C_BRI_DEC>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
